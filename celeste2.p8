pico-8 cartridge // http://www.pico-8.com
version 29
__lua__

-- globals
room = 0
objects = {}

function _init()
	room_load(0)
end
-->8
input_x = 0
input_y = 0
input_x_turned = false
input_y_turned = false
input_jump = false
input_jump_pressed = false
input_grapple = false
input_grapple_pressed = false

function _update()

	-- input_x
	local prev_x = input_x
	if (btn(0)) then
		if (btn(1)) then
			if (input_x_turned) then
				input_x = prev_x
			else
				input_x = -prev_x
				input_x_turned = true
			end
		else
			input_x = -1
			input_x_turned = false
		end
	elseif (btn(1)) then
		input_x = 1
		input_x_turned = false
	else
		input_x = 0
		input_x_turned = false
	end

	-- input_y
	local prev_y = input_y
	if (btn(2)) then
		if (btn(3)) then
			if (input_y_turned) then
				input_y = prev_y
			else
				input_y = -prev_y
				input_y_turned = true
			end
		else
			input_y = -1
			input_y_turned = false
		end
	elseif (btn(3)) then
		input_y = 1
		input_y_turned = false
	else
		input_y = 0
		input_y_turned = false
	end

	-- input_jump
	local jump = btn(4)
	input_jump_pressed = jump and not input_jump
	input_jump = jump

	-- input_grapple
	local grapple = btn(5)
	input_grapple_pressed = grapple and not input_grapple
	input_grapple = grapple

	--objects
	for i = 1, #objects do
		objects[i]:update()
	end
end
-->8
function _draw()
	cls()
	map((room % 4) * 16, (room / 4) * 16, 0, 0, 16, 16, 1)

	for i=1,#objects do
		objects[i]:draw()
	end

	print("cpu: " .. flr(stat(1) * 100) .. "/100", 9, 9, 4)
	print("mem: " .. flr(stat(0)) .. "/2048", 9, 15, 4)
end

-->8

-- Objects:
#include object.lua
#include player.lua

crate = {}
crate.tile = 16
crate.base = object
crate.geom = g_solid
crate.init = function(self)
	self.spr = self.tile
end
crate.update = function(self) 
	self:move_y(1)
end

setmetatable(crate, lookup)
add(types, crate)

-->8

-- gets the tile at the given location in the CURRENT room
function room_tile_at(x, y)
	return mget((room % 4) * 16 + x, (room / 4) * 16 + y)
end

-- loads the given room
function room_load(index)
	room = index
	objects = {}

	for i = 0,15 do
		for j = 0,15 do
			for n=1,#types do
				if (room_tile_at(i, j) == types[n].tile) then
					create(types[n], i * 8, j * 8)
				end
			end
		end
	end
end

function sign(x)
	if (x < 0) then
		return -1
	elseif (x > 0) then
		return 1
	else
		return 0
	end
end

function approach(x, target, max_delta)
	if (x < target) then
		return min(x + max_delta, target)
	else
		return max(x - max_delta, target)
	end
end

__gfx__
00000000777777770011110001111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000070111111011144411000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700722222071114441111474471000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000722222071147447101444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000722222070144444000aaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007007222220700aaaa0000222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000722222070022220007000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777770070070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
90000009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
90400409000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
90440009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
90044009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
90404409000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
90000009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000300000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000300000300000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100030000000300000003000000030100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000300000000030000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000030100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000002000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000003000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010100000101010100000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010100000000000000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
